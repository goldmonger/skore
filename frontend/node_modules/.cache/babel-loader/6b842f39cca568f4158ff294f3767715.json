{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/projects/Z/skore/src/game/jackpot/Jackpot.js\";\nimport React, { useState } from 'react';\nimport './Jackpot.css'; //import JackpotPlayers from './JackpotPlayers'\n\nconst Jackpot = props => {\n  const [gang, setGang] = useState(false);\n  const [stakes, setStakes] = useState(100);\n  const [config, setConfig] = useState(true);\n\n  const gangFlagHandler = () => {\n    if (gang === true) {\n      setGang(false);\n    } else {\n      setGang(true);\n    }\n  };\n\n  const stakesInputHandler = e => {\n    setStakes(e.target.value);\n  };\n\n  const beginJackpotHandler = e => {\n    setConfig(false);\n\n    if (gang === true) {\n      //all 5 render\n      props.all_players.map(player => {//console.log(player.name)\n      });\n    } else {\n      let tempArray = []; //render only the first 3 players from jackpot\n\n      props.all_players.map(player => {\n        tempArray.push(player.name);\n      });\n      let x = 0;\n\n      for (x; x < 3; x++) {//console.log(tempArray[x])\n      }\n    }\n  };\n\n  if (config) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-container  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Welcome to Jackpot\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 24\n      }\n    }, \"stakes: \", stakes)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"stakes\",\n      className: \"game-input1\",\n      id: \"stakes_input\",\n      value: stakes,\n      onChange: stakesInputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }\n    }, \"gang flag: \", gang ? \"ON\" : \"OFF\")), gang ? /*#__PURE__*/React.createElement(\"button\", {\n      value: \"reset\",\n      onClick: gangFlagHandler,\n      className: \"game_flag_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"reset\") : /*#__PURE__*/React.createElement(\"button\", {\n      value: \"set\",\n      onClick: gangFlagHandler,\n      className: \"game_flag_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"set\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"game-button\",\n      onClick: beginJackpotHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"START\"));\n  } else {\n    if (gang) {\n      return (\n        /*#__PURE__*/\n        //full team block render\n        React.createElement(\"div\", {\n          className: \"game-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }\n        }, \"Jackpot \", stakes, \" \", gang ? \"Full House\" : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }\n        }, \"for each player in JackpotPlayers render the table based on gang flag\"))\n      );\n    } else {\n      return (\n        /*#__PURE__*/\n        //usual team block render\n        React.createElement(\"div\", {\n          className: \"game-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }, \"Jackpot \", stakes, \" \", gang ? \"Full House\" : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }\n        }, \"for each player in JackpotPlayers render the table based on gang flag\"))\n      );\n    }\n  }\n};\n\nexport default Jackpot;","map":{"version":3,"sources":["/Users/neo/Desktop/projects/Z/skore/src/game/jackpot/Jackpot.js"],"names":["React","useState","Jackpot","props","gang","setGang","stakes","setStakes","config","setConfig","gangFlagHandler","stakesInputHandler","e","target","value","beginJackpotHandler","all_players","map","player","tempArray","push","name","x"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Jackpot.css'\n//import JackpotPlayers from './JackpotPlayers'\n\nconst Jackpot = (props) => {\n    const [ gang, setGang ] = useState(false)\n    const [ stakes, setStakes ] = useState(100)\n    const [ config, setConfig ] = useState(true)\n\n\n    const gangFlagHandler = () => {\n        if (gang === true){\n            setGang(false)\n        }\n        else{\n            setGang(true)\n        }\n    }\n\n    const stakesInputHandler = (e) => {\n        setStakes(e.target.value)\n    }\n\n    const beginJackpotHandler = (e) => {\n        setConfig(false)\n        if(gang === true){\n            //all 5 render\n            props.all_players.map(player => {\n                //console.log(player.name)\n            })\n        }\n        else{\n            let tempArray = []\n            //render only the first 3 players from jackpot\n            props.all_players.map(player => {\n                tempArray.push(player.name)\n            })\n            let x = 0\n            for(x; x<3; x++){\n                //console.log(tempArray[x])\n            }\n        }\n    }\n    if(config){\n        return (\n            <div className=\"game-container  \">\n        \n                <h2>Welcome to Jackpot</h2>\n                <label><b>stakes: {stakes}</b></label>\n                <input type=\"text\" name=\"stakes\" className=\"game-input1\" id=\"stakes_input\" value={stakes} onChange={stakesInputHandler} />\n                <br />\n                <label><b>gang flag: {gang ? \"ON\" : \"OFF\" }</b></label>\n                {gang ?\n                <button value=\"reset\" onClick={gangFlagHandler} className=\"game_flag_button\">reset</button>\n                :\n                <button value=\"set\" onClick={gangFlagHandler} className=\"game_flag_button\" >set</button>\n                }\n                <button className=\"game-button\" onClick={beginJackpotHandler}>START</button>\n            </div>\n         \n        )\n    }\n    else{\n        if(gang){\n            return (\n                //full team block render\n                <div className=\"game-container\">\n                \n                    <h2>Jackpot {stakes} {gang ? \"Full House\" : \"\" }</h2>\n                    <p>for each player in JackpotPlayers render the table based on gang flag</p>\n                </div>\n                \n            )\n        }\n        else{\n            return (\n                //usual team block render\n                <div className=\"game-container\">\n                \n                    <h2>Jackpot {stakes} {gang ? \"Full House\" : \"\" }</h2>\n                    <p>for each player in JackpotPlayers render the table based on gang flag</p>\n                </div>\n                \n            )\n        }\n        \n    }\n    \n};\n\nexport default Jackpot;"]},"metadata":{},"sourceType":"module"}