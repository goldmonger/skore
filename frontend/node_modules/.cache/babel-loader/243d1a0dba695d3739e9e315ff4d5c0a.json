{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/projects/Z/skore/src/game/jackpot/Jackpot.js\";\nimport React, { useState } from 'react';\nimport './Jackpot.css';\nimport Gamer from '../../shared/components/Gamer';\n\nconst Jackpot = props => {\n  let AllPlayerNames = [];\n  props.all_players.map(player => {\n    AllPlayerNames.push(player.name);\n  });\n  const [gang, setGang] = useState(false);\n  const [stakes, setStakes] = useState(100);\n  const [config, setConfig] = useState(true);\n  const [gameRound, setGameRound] = useState(1);\n  const [gameState, setGameState] = useState(props.all_players);\n  const [playing, setPlaying] = useState(AllPlayerNames);\n\n  const gangFlagHandler = () => {\n    if (gang === true) {\n      setGang(false);\n    } else {\n      setGang(true);\n    }\n  };\n\n  const stakesInputHandler = e => {\n    setStakes(e.target.value);\n  };\n\n  const beginJackpotHandler = e => {\n    setConfig(false);\n\n    if (gang === true) {\n      //all 5 render\n\n      /*\n      props.all_players.map(player => {\n          //console.log(player.name)\n      })\n      */\n      setPlaying(AllPlayerNames); //console.log(AllPlayerNames)\n    } else {\n      let tempArray = [];\n      let newPlayingState = []; //render only the first 3 players from jackpot\n\n      props.all_players.map(player => {\n        tempArray.push(player.name);\n      });\n      let x = 0;\n\n      for (x; x < 3; x++) {\n        //console.log(tempArray[x])\n        newPlayingState.push(tempArray[x]);\n      }\n\n      setPlaying(newPlayingState);\n    }\n  };\n\n  const addToSkoreHandler = (e, id) => {\n    const playerIndex = gameState.findIndex(p => {\n      return p.id === id;\n    });\n    const player = { ...gameState[playerIndex]\n    };\n    player.skore = e.target.value;\n    const players = [...gameState];\n    players[playerIndex] = player;\n    console.log(player);\n    console.log(id);\n    console.log(e.target.value);\n    setGameState(players);\n  };\n\n  if (config) {\n    const style = {\n      color: '#e3c43b'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-container  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Jackpot\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 24\n      }\n    }, \"stakes: \")), /*#__PURE__*/React.createElement(\"label\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 68\n      }\n    }, stakes)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"stakes\",\n      className: \"game-input1\",\n      id: \"stakes_input\",\n      value: stakes,\n      onChange: stakesInputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }\n    }, \"gang flag: \")), /*#__PURE__*/React.createElement(\"label\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 71\n      }\n    }, gang ? \"ON\" : \"OFF\")), gang ? /*#__PURE__*/React.createElement(\"button\", {\n      value: \"reset\",\n      onClick: gangFlagHandler,\n      className: \"game_flag_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"reset\") : /*#__PURE__*/React.createElement(\"button\", {\n      value: \"set\",\n      onClick: gangFlagHandler,\n      className: \"game_flag_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"set\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"game-button jack\",\n      onClick: beginJackpotHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"START\"));\n  } else {\n    if (gang) {\n      const housefull = {\n        color: '#666666'\n      };\n      return (\n        /*#__PURE__*/\n        //full team block render\n        React.createElement(\"div\", {\n          className: \"game-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"game\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }\n        }, \"Jackpot \", stakes), /*#__PURE__*/React.createElement(\"h5\", {\n          style: housefull,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }\n        }, gang ? \"full house\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"game-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }\n        }, props.all_players.map((player, index) => {\n          return /*#__PURE__*/React.createElement(Gamer, {\n            key: player.id,\n            id: player.id,\n            name: player.name,\n            skore: gameState[index].skore,\n            changed: e => addToSkoreHandler(e, player.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 41\n            }\n          });\n        }))))\n      );\n    } else {\n      return (\n        /*#__PURE__*/\n        //usual team block render\n        React.createElement(\"div\", {\n          className: \"game-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"game\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }\n        }, \"Jackpot \", stakes), /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        }, \"game \", gameRound), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"game-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        }, props.all_players.map((player, index) => {\n          if (index < 3) {\n            //render the player\n            return /*#__PURE__*/React.createElement(Gamer, {\n              key: player.id,\n              id: player.id,\n              name: player.name,\n              skore: player.skore,\n              changed: e => addToSkoreHandler(e, player.id),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 45\n              }\n            });\n          }\n        }))))\n      );\n    }\n  }\n};\n\nexport default Jackpot;","map":{"version":3,"sources":["/Users/neo/Desktop/projects/Z/skore/src/game/jackpot/Jackpot.js"],"names":["React","useState","Gamer","Jackpot","props","AllPlayerNames","all_players","map","player","push","name","gang","setGang","stakes","setStakes","config","setConfig","gameRound","setGameRound","gameState","setGameState","playing","setPlaying","gangFlagHandler","stakesInputHandler","e","target","value","beginJackpotHandler","tempArray","newPlayingState","x","addToSkoreHandler","id","playerIndex","findIndex","p","skore","players","console","log","style","color","housefull","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Jackpot.css'\n\nimport Gamer from '../../shared/components/Gamer'\n\nconst Jackpot = (props) => {\n\n    let AllPlayerNames = []\n    props.all_players.map(player => {\n        AllPlayerNames.push(player.name)\n    })\n\n\n    const [ gang, setGang ] = useState(false)\n    const [ stakes, setStakes ] = useState(100)\n    const [ config, setConfig ] = useState(true)\n    const [ gameRound, setGameRound ] = useState(1)\n    const [ gameState, setGameState ] = useState(props.all_players)\n    const [ playing, setPlaying ] = useState(AllPlayerNames)\n\n\n    const gangFlagHandler = () => {\n        if (gang === true){\n            setGang(false)\n        }\n        else{\n            setGang(true)\n        }\n    }\n\n    const stakesInputHandler = (e) => {\n        setStakes(e.target.value)\n    }\n\n    const beginJackpotHandler = (e) => {\n        setConfig(false)\n        if(gang === true){\n            //all 5 render\n            /*\n            props.all_players.map(player => {\n                //console.log(player.name)\n            })\n            */\n           setPlaying(AllPlayerNames)\n           //console.log(AllPlayerNames)\n        }\n        else{\n            let tempArray = []\n            let newPlayingState = []\n            //render only the first 3 players from jackpot\n            props.all_players.map(player => {\n                tempArray.push(player.name)\n            })\n            let x = 0\n            for(x; x<3; x++){\n                //console.log(tempArray[x])\n                newPlayingState.push(tempArray[x])\n\n            }\n            setPlaying(newPlayingState)\n        }\n    }\n\n    const addToSkoreHandler = (e, id) => {\n        const playerIndex = gameState.findIndex(p => {\n            return p.id === id\n        })\n        const player = {\n            ...gameState[playerIndex]\n        }\n        player.skore = e.target.value\n        const players = [...gameState]\n        players[playerIndex] = player \n        console.log(player)\n        console.log(id)\n        console.log(e.target.value)\n        setGameState(players)\n    }\n\n\n\n\n\n\n\n\n\n\n\n    if(config){\n        const style = {\n            color: '#e3c43b'\n        }\n        return (\n            <div className=\"game-container  \">\n        \n                <h3>Jackpot</h3>\n                <label><b>stakes: </b></label><label style={style}><b>{stakes}</b></label>\n                <input type=\"text\" name=\"stakes\" className=\"game-input1\" id=\"stakes_input\" value={stakes} onChange={stakesInputHandler} />\n                <br />\n                <label><b>gang flag: </b></label><label style={style}><b>{gang ? \"ON\" : \"OFF\" }</b></label>\n                {gang ?\n                <button value=\"reset\" onClick={gangFlagHandler} className=\"game_flag_button\">reset</button>\n                :\n                <button value=\"set\" onClick={gangFlagHandler} className=\"game_flag_button\" >set</button>\n                }\n                <button className=\"game-button jack\" onClick={beginJackpotHandler}>START</button>\n            </div>\n         \n        )\n    }\n    else{\n        if(gang){\n            const housefull = {\n                color: '#666666'\n            }\n            return (\n                //full team block render\n                <div className=\"game-container\">\n                    <div className=\"game\">\n                        <h3>Jackpot {stakes}</h3> \n                        <h5 style={housefull}>{gang ? \"full house\" : \"\" }</h5>\n                        <div className=\"game-container\">\n                            {\n                                props.all_players.map((player, index) => {\n                                    return (\n                                        <Gamer \n                                        key={player.id}\n                                        id={player.id} \n                                        name={player.name} \n                                        skore={gameState[index].skore}\n                                        changed={(e) => addToSkoreHandler(e, player.id)} \n                                        />\n                                    )\n                                })\n                            }\n                            \n                        </div>\n\n                        \n                    </div>\n                </div>\n                \n            )\n        }\n        else{\n            return (\n                //usual team block render\n                <div className=\"game-container\">\n                    <div className=\"game\">\n                    <h3>Jackpot {stakes}</h3>\n                    <h5>game {gameRound}</h5>\n                        <div className=\"game-container\">\n                            {\n                                props.all_players.map((player, index) => {\n                                    if (index < 3){\n                                        //render the player\n                                        return (\n                                            <Gamer \n                                            key={player.id}\n                                            id={player.id} \n                                            name={player.name} \n                                            skore={player.skore}\n                                            changed={(e) => addToSkoreHandler(e, player.id)} \n                                            />\n                                        )\n                                    }\n                                })\n                            }\n                            \n                        </div>\n                        \n                    </div>\n                </div>\n                \n            )\n        }\n        \n    }\n    \n};\n\nexport default Jackpot;"]},"metadata":{},"sourceType":"module"}