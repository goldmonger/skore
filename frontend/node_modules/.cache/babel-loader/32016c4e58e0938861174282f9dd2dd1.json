{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/projects/Z/skore/src/shared/components/PlayerItem.js\";\nimport React, { useState } from 'react';\nimport './PlayerItem.css';\nimport Switch from 'react-switch';\n\nconst PlayerItem = props => {\n  const Selector = styled.div;\n  const [state, setState] = useState({\n    x: 0\n  });\n  return (\n    /*#__PURE__*/\n    //{/* here each li has to be made a separate component like a checkbox but highlight selected somehow */}\n    React.createElement(\"li\", {\n      className: \"player-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-item__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-item__select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"isPlaying\",\n      id: props.id,\n      className: \"player-item__isPlaying_toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-item__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, props.name), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, \" \", props.splayed, \" series played \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, \" \", props.swins, \" series won \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, \" \", props.mwins, \" \", props.mwins === 1 ? 'match won ' : 'matches won '))))\n  );\n};\n\nexport default PlayerItem;","map":{"version":3,"sources":["/Users/neo/Desktop/projects/Z/skore/src/shared/components/PlayerItem.js"],"names":["React","useState","Switch","PlayerItem","props","Selector","styled","div","state","setState","x","id","name","splayed","swins","mwins"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAKA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,QAAQ,GAAGC,MAAM,CAACC,GAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAAES,IAAAA,CAAC,EAAE;AAAL,GAAD,CAAlC;AACA;AAAA;AACI;AACA;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,EAAE,EAAEN,KAAK,CAACO,EAHd;AAII,MAAA,SAAS,EAAC,+BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eASI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,KAAK,CAACQ,IAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMR,KAAK,CAACS,OAAZ,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMT,KAAK,CAACU,KAAZ,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMV,KAAK,CAACW,KAAZ,OAAoBX,KAAK,CAACW,KAAN,KAAgB,CAAhB,GAAoB,YAApB,GAAmC,cAAvD,CAJJ,CATJ,CADJ;AAFJ;AAqBH,CAxBD;;AA2BA,eAAeZ,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport './PlayerItem.css';\nimport Switch from 'react-switch';\n\n\n\n\nconst PlayerItem = props => {\n    const Selector = styled.div;\n    const [state, setState] = useState({ x: 0});\n    return (\n        //{/* here each li has to be made a separate component like a checkbox but highlight selected somehow */}\n        <li className=\"player-item\">\n            <div className=\"player-item__content\">\n                <div className=\"player-item__select\">\n                    <input \n                        type=\"checkbox\" \n                        name=\"isPlaying\" \n                        id={props.id} \n                        className=\"player-item__isPlaying_toggle\" \n                    />\n                </div>\n                <div className=\"player-item__info\">\n                    <h3>{props.name}</h3>\n                    <h5> {props.splayed} series played </h5>\n                    <h5> {props.swins} series won </h5>\n                    <h5> {props.mwins} {props.mwins === 1 ? 'match won ' : 'matches won '}</h5>\n                </div>\n            </div>\n        </li>\n    );\n};\n\n\nexport default PlayerItem;"]},"metadata":{},"sourceType":"module"}