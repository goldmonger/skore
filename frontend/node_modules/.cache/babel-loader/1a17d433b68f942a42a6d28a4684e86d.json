{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/projects/Z/skore/src/game/jackpot/Jackpot.js\";\nimport React, { useState } from 'react';\nimport './Jackpot.css';\nimport Gamer from '../../shared/components/Gamer';\n\nconst Jackpot = props => {\n  const [gang, setGang] = useState(false);\n  const [stakes, setStakes] = useState(100);\n  const [config, setConfig] = useState(true);\n  let AllPlayerNames = [];\n  props.all_players.map(player => {\n    AllPlayerNames.push(player.name);\n  });\n  const [playing, setPlaying] = useState(AllPlayerNames);\n\n  const gangFlagHandler = () => {\n    if (gang === true) {\n      setGang(false);\n    } else {\n      setGang(true);\n    }\n  };\n\n  const stakesInputHandler = e => {\n    setStakes(e.target.value);\n  };\n\n  const beginJackpotHandler = e => {\n    setConfig(false);\n\n    if (gang === true) {\n      //all 5 render\n\n      /*\n      props.all_players.map(player => {\n          //console.log(player.name)\n      })\n      */\n      setPlaying(AllPlayerNames); //console.log(AllPlayerNames)\n    } else {\n      let tempArray = [];\n      let newPlayingState = []; //render only the first 3 players from jackpot\n\n      props.all_players.map(player => {\n        tempArray.push(player.name);\n      });\n      let x = 0;\n\n      for (x; x < 3; x++) {\n        //console.log(tempArray[x])\n        newPlayingState.push(tempArray[x]);\n      }\n\n      setPlaying(newPlayingState);\n    }\n  };\n\n  if (config) {\n    const style = {\n      color: '#e3c43b'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-container  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Welcome to Jackpot\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }\n    }, \"stakes: \")), /*#__PURE__*/React.createElement(\"label\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 68\n      }\n    }, stakes)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"stakes\",\n      className: \"game-input1\",\n      id: \"stakes_input\",\n      value: stakes,\n      onChange: stakesInputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }\n    }, \"gang flag: \")), /*#__PURE__*/React.createElement(\"label\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 71\n      }\n    }, gang ? \"ON\" : \"OFF\")), gang ? /*#__PURE__*/React.createElement(\"button\", {\n      value: \"reset\",\n      onClick: gangFlagHandler,\n      className: \"game_flag_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"reset\") : /*#__PURE__*/React.createElement(\"button\", {\n      value: \"set\",\n      onClick: gangFlagHandler,\n      className: \"game_flag_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"set\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"game-button jack\",\n      onClick: beginJackpotHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"START\"));\n  } else {\n    if (gang) {\n      return (\n        /*#__PURE__*/\n        //full team block render\n        React.createElement(\"div\", {\n          className: \"game-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }\n        }, \"Jackpot \", stakes, \" \", gang ? \"Full House\" : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }\n        }, \"for each player in JackpotPlayers render the table based on gang flag\"))\n      );\n    } else {\n      return (\n        /*#__PURE__*/\n        //usual team block render\n        React.createElement(\"div\", {\n          className: \"game-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }, \"Jackpot \", stakes, \" \", gang ? \"Full House\" : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }\n        }, \"for each player in JackpotPlayers render the table based on gang flag\"), /*#__PURE__*/React.createElement(Gamer, {\n          id: props.all_players[0].id,\n          name: props.all_players[0].name,\n          skore: props.all_players[0].skore,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Gamer, {\n          id: props.all_players[1].id,\n          name: props.all_players[1].name,\n          skore: props.all_players[1].skore,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Gamer, {\n          id: props.all_players[2].id,\n          name: props.all_players[2].name,\n          skore: props.all_players[2].skore,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }))\n      );\n    }\n  }\n};\n\nexport default Jackpot;","map":{"version":3,"sources":["/Users/neo/Desktop/projects/Z/skore/src/game/jackpot/Jackpot.js"],"names":["React","useState","Gamer","Jackpot","props","gang","setGang","stakes","setStakes","config","setConfig","AllPlayerNames","all_players","map","player","push","name","playing","setPlaying","gangFlagHandler","stakesInputHandler","e","target","value","beginJackpotHandler","tempArray","newPlayingState","x","style","color","id","skore"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Jackpot.css'\n\nimport Gamer from '../../shared/components/Gamer'\n\nconst Jackpot = (props) => {\n    const [ gang, setGang ] = useState(false)\n    const [ stakes, setStakes ] = useState(100)\n    const [ config, setConfig ] = useState(true)\n\n    let AllPlayerNames = []\n    props.all_players.map(player => {\n        AllPlayerNames.push(player.name)\n    })\n\n\n    const [ playing, setPlaying ] = useState(AllPlayerNames)\n\n\n    const gangFlagHandler = () => {\n        if (gang === true){\n            setGang(false)\n        }\n        else{\n            setGang(true)\n        }\n    }\n\n    const stakesInputHandler = (e) => {\n        setStakes(e.target.value)\n    }\n\n    const beginJackpotHandler = (e) => {\n        setConfig(false)\n        if(gang === true){\n            //all 5 render\n            /*\n            props.all_players.map(player => {\n                //console.log(player.name)\n            })\n            */\n           setPlaying(AllPlayerNames)\n           //console.log(AllPlayerNames)\n        }\n        else{\n            let tempArray = []\n            let newPlayingState = []\n            //render only the first 3 players from jackpot\n            props.all_players.map(player => {\n                tempArray.push(player.name)\n            })\n            let x = 0\n            for(x; x<3; x++){\n                //console.log(tempArray[x])\n                newPlayingState.push(tempArray[x])\n\n            }\n            setPlaying(newPlayingState)\n        }\n    }\n    if(config){\n        const style = {\n            color: '#e3c43b'\n        }\n        return (\n            <div className=\"game-container  \">\n        \n                <h2>Welcome to Jackpot</h2>\n                <label><b>stakes: </b></label><label style={style}><b>{stakes}</b></label>\n                <input type=\"text\" name=\"stakes\" className=\"game-input1\" id=\"stakes_input\" value={stakes} onChange={stakesInputHandler} />\n                <br />\n                <label><b>gang flag: </b></label><label style={style}><b>{gang ? \"ON\" : \"OFF\" }</b></label>\n                {gang ?\n                <button value=\"reset\" onClick={gangFlagHandler} className=\"game_flag_button\">reset</button>\n                :\n                <button value=\"set\" onClick={gangFlagHandler} className=\"game_flag_button\" >set</button>\n                }\n                <button className=\"game-button jack\" onClick={beginJackpotHandler}>START</button>\n            </div>\n         \n        )\n    }\n    else{\n        if(gang){\n            return (\n                //full team block render\n                <div className=\"game-container\">\n                \n                    <h2>Jackpot {stakes} {gang ? \"Full House\" : \"\" }</h2>\n                    <p>for each player in JackpotPlayers render the table based on gang flag</p>\n                </div>\n                \n            )\n        }\n        else{\n            return (\n                //usual team block render\n                <div className=\"game-container\">\n\n                    <h2>Jackpot {stakes} {gang ? \"Full House\" : \"\" }</h2>\n                    <p>for each player in JackpotPlayers render the table based on gang flag</p>\n                    <Gamer id={props.all_players[0].id} name={props.all_players[0].name} skore={props.all_players[0].skore} />\n                    <Gamer id={props.all_players[1].id} name={props.all_players[1].name} skore={props.all_players[1].skore} />\n                    <Gamer id={props.all_players[2].id} name={props.all_players[2].name} skore={props.all_players[2].skore} />\n                    \n                    \n                </div>\n                \n            )\n        }\n        \n    }\n    \n};\n\nexport default Jackpot;"]},"metadata":{},"sourceType":"module"}