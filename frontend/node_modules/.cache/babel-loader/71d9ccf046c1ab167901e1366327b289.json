{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/projects/Z/skore/src/game/ss7/Ss7R.js\";\nimport React, { useState } from 'react'; //import Game from '../../shared/pages/Game'\n\nimport './Ss7R.css';\nimport Gamer from '../../shared/components/Gamer';\n\nconst Ss7R = props => {\n  const [gameState, setGameState] = useState({\n    players: [//for each selected player this...\n    {\n      id: 'p1',\n      name: \"acetone7\",\n      skore: 0\n    }, {\n      id: 'p2',\n      name: \"anu\",\n      skore: 0\n    }, {\n      id: 'p3',\n      name: props.selected.pl,\n      skore: 0\n    }],\n    round: 1,\n    end: false,\n    winner: \"\"\n  });\n\n  if (props.selected.pl.length === 0) {\n    alert(\"there are no players selected\");\n  }\n\n  const onSubmitHandler = e => {\n    e.preventDefault(); //console.log(\"was submitted update skore with setState\")\n\n    if (gameState.round === 1 || gameState.round === 7) {\n      alert(\"double score flag\");\n    }\n\n    if (gameState.round === 7) {\n      //alert(\"end of series flag\")\n      gameState.end = true; //alert(\"print winner with least score\")\n      //console.log(gameState.end)\n    } //check flags and do for now open\n\n\n    if (!gameState.end) {\n      setGameState({\n        players: [//for each selected player this...\n        {\n          id: 'p1',\n          name: \"acetone7\",\n          skore: 5\n        }, {\n          id: 'p2',\n          name: \"anu\",\n          skore: 14\n        }, {\n          id: 'p3',\n          name: \"roopa\",\n          skore: 0\n        }],\n        end: false,\n        round: gameState.round + 1,\n        winner: \"\"\n      });\n    } else {\n      setGameState({\n        players: [//for each selected players this...\n        {\n          id: 'p1',\n          name: \"acetone7\",\n          skore: 5\n        }, {\n          id: 'p2',\n          name: \"anu\",\n          skore: 14\n        }, {\n          id: 'p3',\n          name: \"roopa\",\n          skore: 0\n        }],\n        round: gameState.round + 1,\n        end: true,\n        winner: \"anu\"\n      });\n    }\n  };\n\n  if (!gameState.end) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"round_num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"game \", gameState.round), /*#__PURE__*/React.createElement(Gamer, {\n      id: gameState.players[0].id,\n      name: gameState.players[0].name,\n      skore: gameState.players[0].skore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Gamer, {\n      id: gameState.players[1].id,\n      name: gameState.players[1].name,\n      skore: gameState.players[1].skore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Gamer, {\n      id: gameState.players[2].id,\n      name: gameState.players[2].name,\n      skore: gameState.players[2].skore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"game-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Done!\")));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"round_num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"end of series\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"winner is \", gameState.winner));\n  }\n};\n\nexport default Ss7R;","map":{"version":3,"sources":["/Users/neo/Desktop/projects/Z/skore/src/game/ss7/Ss7R.js"],"names":["React","useState","Gamer","Ss7R","props","gameState","setGameState","players","id","name","skore","selected","pl","round","end","winner","length","alert","onSubmitHandler","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n//import Game from '../../shared/pages/Game'\nimport './Ss7R.css';\nimport Gamer from '../../shared/components/Gamer'\n\n\nconst Ss7R = props => {\n    const [ gameState, setGameState ] = useState({\n        players: [\n            //for each selected player this...\n            {id: 'p1', name: \"acetone7\", skore: 0 },\n            {id: 'p2', name: \"anu\", skore: 0 },\n            {id: 'p3', name: props.selected.pl, skore: 0 }\n        ],\n        round: 1,\n        end: false,\n        winner: \"\"\n    })\n    if(props.selected.pl.length === 0){\n        alert(\"there are no players selected\")\n    }\n    const onSubmitHandler = e => {\n        e.preventDefault()\n        //console.log(\"was submitted update skore with setState\")\n        if(gameState.round === 1 || gameState.round === 7){\n            alert(\"double score flag\")\n        }\n        if(gameState.round === 7){\n            //alert(\"end of series flag\")\n            gameState.end = true\n            //alert(\"print winner with least score\")\n            //console.log(gameState.end)\n        }\n\n        //check flags and do for now open\n        if(!gameState.end){\n            setGameState({\n                players: [\n                    //for each selected player this...\n                    {id: 'p1', name: \"acetone7\", skore: 5 },\n                    {id: 'p2', name: \"anu\", skore: 14 },\n                    {id: 'p3', name: \"roopa\", skore: 0 }\n                ],\n                end: false,\n                round: gameState.round+1,\n                winner: \"\"\n            })\n        }\n        else{\n            setGameState({\n                players: [\n                    //for each selected players this...\n                    {id: 'p1', name: \"acetone7\", skore: 5 },\n                    {id: 'p2', name: \"anu\", skore: 14 },\n                    {id: 'p3', name: \"roopa\", skore: 0 }\n                ],\n                round: gameState.round+1,\n                end: true,\n                winner: \"anu\"\n            })\n        }\n        \n        \n         \n    \n    }\n    if(!gameState.end){\n        return (\n            <div className=\"game-container\">\n                <form onSubmit={onSubmitHandler}>\n    \n                    <h4 className=\"round_num\">game {gameState.round}</h4>\n                    <Gamer id={gameState.players[0].id} name={gameState.players[0].name} skore={gameState.players[0].skore} />\n                    <Gamer id={gameState.players[1].id} name={gameState.players[1].name} skore={gameState.players[1].skore} />\n                    <Gamer id={gameState.players[2].id} name={gameState.players[2].name} skore={gameState.players[2].skore} />\n                <button type=\"submit\" className=\"game-button\" >Done!</button>\n                </form>\n            </div>\n        )\n    }\n    else{\n        return (\n            <div className=\"game-container\">\n                <h4 className=\"round_num\">end of series</h4>\n                <h2>winner is {gameState.winner}</h2>\n            </div>\n        )\n    }\n    \n}\n\n\nexport default Ss7R;\n\n\n"]},"metadata":{},"sourceType":"module"}